plugins {
	id 'org.springframework.boot' version '2.4.1'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id 'org.jetbrains.kotlin.jvm' version '1.6.21'
	id 'org.jetbrains.kotlin.plugin.allopen' version '1.6.21'
	id 'org.jetbrains.kotlin.plugin.noarg' version '1.6.21'
}


group = 'com.myplaylists'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.11'
	implementation 'com.google.code.gson:gson'
	implementation 'org.jsoup:jsoup:1.14.2'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
	implementation("org.jetbrains.kotlin:kotlin-reflect")
	implementation("com.fasterxml.jackson.module:jackson-module-kotlin")
}

test {
	useJUnitPlatform()
}
compileKotlin {
	kotlinOptions {
		jvmTarget = "11"
	}
}
compileTestKotlin {
	kotlinOptions {
		jvmTarget = "11"
	}
}

allOpen {
	annotation("javax.persistence.Entity")
	annotation("javax.persistence.Embeddable")
	annotation("javax.persistence.MappedSuperclass")
	annotation("org.springframework.transaction.annotation.Transactional")
}

// This allows the Java Persistence API (JPA) to instantiate a class although it doesn't have the zero-parameter constructor from Kotlin or Java point of view
noArg {
	annotation("javax.persistence.Entity")
}